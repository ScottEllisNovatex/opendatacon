{
	"LogFileSizekB"	: 50000,
	"LogName" :	"ODC_Log.txt",
	"NumLogFiles":	1,
	"LogLevel":	"debug",
	
	"SyslogLog" :
	{
		"Host" : "127.0.0.1",
		"LogLevel":	"trace",
		"Port" : 514
	},
	"TCPLog":
	{
            "IP" : "127.0.0.1",
            "Port" : 12345,
			"LogLevel":	"debug",
            "TCPClientServer" : "CLIENT"
	},
	
	"Plugins" :
	[
		{
			"Name" : "ConsoleUI-1",
			"Type" : "ConsoleUI",
			"Library" : "ConsoleUI",
			"ConfFilename" : "",
			"ConfOverrides" : { }
		},
		{
			"Name" : "WebUI-1",
			"Type" : "WebUI",
			"Library" : "WebUI",
			"ConfFilename" : "",
			"ConfOverrides" : { "IP" : "0.0.0.0", "Port" : 10443 }
		}
	],
	
	"Ports" :
	[	
		{
			"Name" : "CBMaster",
			"Type" : "CBMaster",
			"Library" : "CBPort",
			"ConfFilename" : "",
			"ConfOverrides" : 
			{
				// ZETLAND TEST RTU
				"IP" : "conitel225.ddns.net",
				"Port" : 5001,
				"OutstationAddr" : 1,
				"TCPClientServer" : "CLIENT",	// Master is a CLIENT, Outstation is a SERVER
				"LinkNumRetry": 4,

				//-------Point conf--------#
				// Conitel/baker switch
				"IsBakerDevice" : false,

				// If a binary event time stamp is outside 30 minutes of current time, replace the timestamp
				"OverrideOldTimeStamps" : false,

				// This flag will have the OutStation respond without waiting for ODC responses - it will still send the ODC commands, just no feedback. Useful for testing and connecting to the sim port.
				// Set to false, the OutStation will set up ODC/timeout callbacks/lambdas for ODC responses. If not found will default to false.
				"StandAloneOutstation" : true,

				// Maximum time to wait for CB Master responses to a command and number of times to retry a command.
				"CBCommandTimeoutmsec" : 3000,
				"CBCommandRetries" : 1,

				// Master only PollGroups - ignored by outstation
				"PollGroups" : [
						//		 {"ID" : 0, "PollRate" : 5000, "Group" : 0, "PollType" : "Scan"}	// Analog Scan
						//		{"ID" : 1, "PollRate" : 30000, "Group" : 4, "PollType" : "Scan"}	// Dig Scan DIG bits
								{"ID" : 2, "PollRate" : 30000, "Group" : 6, "PollType" : "Scan"}	// Dig Scan MCA bits
								,{"ID" : 3, "PollRate" : 60000, "Group" : 6, "PollType" : "SOEScan"} // SoeScan - group does not matter.
						//		,{"ID" : 4, "PollRate" : 120000, "PollType" : "TimeSetCommand"}
								],

				"Binaries" : [	{"Index" : 0, "Group" : 4, "PayloadLocation": "2A", "Channel" : 1, "Type" : "DIG"},
								{"Index" : 1, "Group" : 4, "PayloadLocation": "2A", "Channel" : 2, "Type" : "DIG"},
								{"Index" : 10, "Group" : 6, "PayloadLocation": "1B", "Channel" : 1, "Type" : "MCA","SOE" : { "Index" : 1} },
								{"Index" : 11, "Group" : 6, "PayloadLocation": "1B", "Channel" : 2, "Type" : "MCA","SOE" : { "Index" : 2} },
								{"Index" : 12, "Group" : 6, "PayloadLocation": "1B", "Channel" : 3, "Type" : "MCA","SOE" : { "Index" : 3} },
								{"Index" : 13, "Group" : 6, "PayloadLocation": "1B", "Channel" : 4, "Type" : "MCA","SOE" : { "Index" : 4} },
								{"Index" : 14, "Group" : 6, "PayloadLocation": "1B", "Channel" : 5, "Type" : "MCA","SOE" : { "Index" : 5} },
								{"Index" : 15, "Group" : 6, "PayloadLocation": "1B", "Channel" : 6, "Type" : "MCA","SOE" : { "Index" : 6} },
								{"Index" : 5, "Group":4, "Channel" : 5, "PayloadLocation": "1B", "Type" : "DIG"},	// Card_Ctrls_Isolate
								{"Index" : 6, "Group":4, "Channel" : 6, "PayloadLocation": "1B", "Type" : "DIG"},	// Watch_Dog_Timer
								{"Index" : 7, "Group":4, "Channel" : 7, "PayloadLocation": "1B", "Type" : "DIG"},	// Field_Power_Supply
								{"Index" : 8, "Group":4, "Channel" : 8, "PayloadLocation": "1B", "Type" : "DIG"}],	// Power_Supplies

				"Analogs" : [	{"Index" : 0, "Group" : 0, "PayloadLocation": "1B","Channel" : 1, "Type":"ANA"},
								{"Index" : 1, "Group" : 0, "PayloadLocation": "2A","Channel" : 1, "Type":"ANA"},
								{"Index" : 2, "Group" : 0, "PayloadLocation": "2B","Channel" : 1, "Type":"ANA"},
								{"Index" : 3, "Group" : 0, "PayloadLocation": "3A","Channel" : 1, "Type":"ANA"}],

								// Setpoint A/B maps from Channel 1 == A, Channel 2 == B
				"AnalogControls" : [{"Index": 1,  "Group" : 0, "Channel" : 1, "Type" : "CONTROL"}],

				// CONTROL up to 12 bits per group address, Channel 1 to 12. Python simulator used dual points one for trip one for close.
				// Apparently Group 0 is internal signals for the RTU. Group 1 is the first of the cards for external signals.
				"BinaryControls" : [{"Index": 100,  "Group" : 0, "Channel" : 2, "Type" : "CONTROL"},	// This is always (we think) an RTU internal signal - Isolate Controls
									{"Index": 1,  "Group" : 1, "Channel" : 1, "Type" : "CONTROL"},	// The second group is the start of the real controls
									{"Index": 2,  "Group" : 1, "Channel" : 2, "Type" : "CONTROL"},
									{"Index": 3,  "Group" : 1, "Channel" : 3, "Type" : "CONTROL"},
									{"Index": 4,  "Group" : 1, "Channel" : 4, "Type" : "CONTROL"},
									{"Index": 5,  "Group" : 1, "Channel" : 5, "Type" : "CONTROL"},
									{"Index": 6,  "Group" : 1, "Channel" : 6, "Type" : "CONTROL"},
									{"Index": 7,  "Group" : 1, "Channel" : 7, "Type" : "CONTROL"},
									{"Index": 8,  "Group" : 1, "Channel" : 8, "Type" : "CONTROL"},
									{"Index": 9,  "Group" : 1, "Channel" : 9, "Type" : "CONTROL"},
									{"Index": 10,  "Group" : 1, "Channel" : 10, "Type" : "CONTROL"},
									{"Index": 11,  "Group" : 1, "Channel" : 11, "Type" : "CONTROL"},
									{"Index": 12,  "Group" : 1, "Channel" : 12, "Type" : "CONTROL"}]

				// Special definition, so we know where to find the Remote Status Data in the scanned group.
			//	"RemoteStatus" : [{"Group":4, "Channel" : 5, "PayloadLocation": "1B"},	// Card_Ctrls_Isolate
			//					  {"Group":4, "Channel" : 6, "PayloadLocation": "1B"},	// Watch_Dog_Timer
			//					  {"Group":4, "Channel" : 7, "PayloadLocation": "1B"},	// Field_Power_Supply
			//					  {"Group":4, "Channel" : 8, "PayloadLocation": "1B"}]	// Power_Supplies
				
				// I/O CIRCUIT CONFIGURATION - ZETLAND
				//
				// ENTRY TYPE STGR FILE CARD CCT PRM1 PRM2

				// 0001  SOE   16   01  001  001  MCA
				// 0002  SOE   16   01  001  002  MCA

				// 0010  DIG   14   01  002  001
				// 0011  DIG   14   01  002  002

				// 0020  AHA   10   01  009  001
				// 0021  AHA   10   01  009  002

				// 0030  AHA   10   01  007  001
				// 0031  AHA   10   01  007  002

				// 0100  CON   10   01  005  001  2
				// 0102  CON   11   01  005  001  2
				// 0104  CON   12   01  005  001  2
				// 0106  CON   13   01  005  001  2
				// 0108  CON   14   01  005  001  2
				// 0110  CON   15   01  005  001  2
				// 0112  CON   16   01  005  001  2
				// 0114  CON   17   01  005  001  2
			}
		}
		,
		{
			"Name" : "JSON",
			"Type" : "JSONServer",
			"Library" : "JSONPort",
			"ConfFilename" : "",
			"ConfOverrides" : 
			{
				"IP" : "127.0.0.1", "Port" : 2598,
				//"OutputTemplate" : {"Context":{"Time":"<TIMESTAMP>","Quality" : "<QUALITY>"},"Val":"<VALUE>","Name":"<NAME>","Index" : "<INDEX>"},
				//"StyleOutput" : true,
				"JSONPointConf" :
				[
					{
						"PointType" : "Analog",
						"Points" : 
						[
							{"Name":"First", "Index": 0},
							{"Name":"Second", "Index": 1},
							{"Name":"Third", "Index": 2},
							{"Name":"Fourth", "Index": 3}
						]
					},
					{
						"PointType" : "Binary",
						"Points" : 
						[
							{"Index": 0},
							{"Index": 1},
							{"Index": 10},
							{"Index": 11},
							{"Index": 7}
						]
					},
					{
						"PointType" : "AnalogControl",
						"Points" : 
						[
							// AnalogControl just has an index the control looks like {"analogcontrols": {"1" : 100}}
							{ 	
								"Index": 1,
								"JSONPath" : ["analogcontrols","1"]
							}
						]
					},
					{
						"PointType" : "Control",
						"Points" : 
						[
							// Expect control like {"controls": {"1" : "T"}} for trip, {"controls": {"1" : "C"}} for close
							{ 	
								"Index": 1,
								"JSONPath" : ["controls","1"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 2,
								"JSONPath" : ["controls","2"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 3,
								"JSONPath" : ["controls","3"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 4,
								"JSONPath" : ["controls","4"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 5,
								"JSONPath" : ["controls","5"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 6,
								"JSONPath" : ["controls","6"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 7,
								"JSONPath" : ["controls","7"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 8,
								"JSONPath" : ["controls","8"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 9,
								"JSONPath" : ["controls","9"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 10,
								"JSONPath" : ["controls","10"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 11,
								"JSONPath" : ["controls","11"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 12,
								"JSONPath" : ["controls","12"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							},
							{ 	
								"Index": 100,
								"JSONPath" : ["controls","100"],
								"ControlMode" : "TRIPCLOSE",
								"TripVal" : "T","CloseVal" : "C"
							}							
						]
					}		
				]	
			}
		}
		,
		{
			"Name" : "Null",
			"Type" : "Null",
			"ConfFilename" : "/dev/null"
		}		
	]
	,
	"Connectors" :
	[
		{
			"Name" : "Connector1",
			"ConfFilename" : "",
			"ConfOverrides" : 
			{
				"Connections" :
				[
					{
						"Name" : "Connection1",
						"Port1" : "CBMaster",
						"Port2" : "JSON"
					}
				]
			}
		}	
	]
}
